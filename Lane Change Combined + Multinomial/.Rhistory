1+2
data = read.csv(file="ModeChoiceData.csv",header= TRUE)
data <- read.csv(file="ModeChoiceData.csv",header= TRUE)
data <- read.csv(file="ModeChoiceData.csv",header= TRUE)
source('~/R Scripts/First_Code.R')
data <- read.csv(file="ModeChoiceData.csv",header= TRUE)
ModeChoiceData <- read.csv("~/R Scripts/ModeChoiceData.csv")
View(ModeChoiceData)
View(ModeChoiceData)
data <- read.csv(file="ModeChoiceData.csv",header= TRUE)
data <- read.csv(file="C:\Users\sprab\OneDrive\Documents\R Scripts\\ModeChoiceData.csv",header= TRUE)
data <- read.csv(file="C:\\Users\\sprab\\OneDrive\\Documents\\R Scripts\\ModeChoiceData.csv",header= TRUE)
data <- read.csv(file="C:\\Users\\sprab\\OneDrive\\Documents\\R Scripts\\ModeChoiceData.csv",header= TRUE)
head(data)
utility <- function (b0,b1,TC) {
temp1 <- TC[,1]*b1+b0           #Determine the utility of the option gas
temp2 <- TC[,2]*b1         #Determine the utility of the option oil
return(cbind(temp1,temp2))
}
utility.check <- utility(b0,b1,TC)
choice.probs <- function (b0,b1,TC) {
temp <- utility(b0,b1,TC)
prob1 <- exp(temp[,1]) / ( exp(temp[,1]) + exp(temp[,2]) )
prob2 <- 1 - prob1
return(cbind(prob1,prob2))
}
#define the input
#coefficients
b0      <-  1.2
b1      <- -0.20
#exemplary travel costs
TC.1  <- c(15,35)
TC.2 <- c(5,20)
TC      <- cbind(TC.1,TC.2)
TC
#Output
result = choice.probs(b0,b1,TC)
result[1,2]*result[2,1] #Likelihood value will be based on yn
result
setwd("C:/Users/sprab/OneDrive/Documents/Study/University/AP/Presentation 2/Multinomial")
library(apollo)
apollo_initialise()
database <- read.csv("All_Data.csv")
apollo_control=list(modelName  ="BaseModel",
modelDescr ="LCE",
indivID    ="Driver_tag",
workInLogs = TRUE,
outputDirectory = "LCE"
#,panelData  = FALSE
)
apollo_beta=c(asc_acc     = 0,
asc_brk     = 0,
speed_acc   = 0,
speed_brk   = 0,
nodv_acc    = 0,
nodv_brk    = 0,
dist_acc    = 0,
dist_brk    = 0,
time_acc    = 0,
time_brk    = 0,
asc_alc     = 0,
asc_blc     = 0,
speed_alc   = 0,
speed_blc   = 0,
nodv_alc    = 0,
nodv_blc    = 0,
dist_alc    = 0,
dist_blc    = 0,
time_alc    = 0,
time_blc    = 0,
pos_acc	= 0,
pos_brk = 0,
pos_alc  = 0,
pos_blc = 0,
male_alc    = 0,
male_blc    = 0,
male_acc    = 0,
male_brk    = 0,
oldAge_alc  = 0,
oldAge_blc  = 0,
oldAge_acc  = 0,
oldAge_brk  = 0,
)
#all coefficients are estimated, none is fixed
apollo_fixed = c()
#check if you have defined everything necessary
apollo_inputs = apollo_validateInputs()
setwd("C:/Users/sprab/OneDrive/Documents/Study/University/AP/Presentation 2/Multinomial Logit")
library(apollo)
apollo_initialise()
database <- read.csv("All_Data.csv")
apollo_control=list(modelName  ="BaseModel",
modelDescr ="LCE",
indivID    ="Driver_tag",
workInLogs = TRUE,
outputDirectory = "LCE"
#,panelData  = FALSE
)
apollo_beta=c(asc_acc     = 0,
asc_brk     = 0,
speed_acc   = 0,
speed_brk   = 0,
nodv_acc    = 0,
nodv_brk    = 0,
dist_acc    = 0,
dist_brk    = 0,
time_acc    = 0,
time_brk    = 0,
asc_alc     = 0,
asc_blc     = 0,
speed_alc   = 0,
speed_blc   = 0,
nodv_alc    = 0,
nodv_blc    = 0,
dist_alc    = 0,
dist_blc    = 0,
time_alc    = 0,
time_blc    = 0,
pos_acc	= 0,
pos_brk = 0,
pos_alc  = 0,
pos_blc = 0,
male_alc    = 0,
male_blc    = 0,
male_acc    = 0,
male_brk    = 0,
oldAge_alc  = 0,
oldAge_blc  = 0,
oldAge_acc  = 0,
oldAge_brk  = 0
)
#all coefficients are estimated, none is fixed
apollo_fixed = c()
#check if you have defined everything necessary
apollo_inputs = apollo_validateInputs()
apollo_probabilities=function(apollo_beta, apollo_inputs, functionality="estimate"){
apollo_attach(apollo_beta, apollo_inputs)
on.exit(apollo_detach(apollo_beta, apollo_inputs))
P = list() ### Create list of probabilities P
V = list() ### List of utilities
time_to_impact = (Dist_Veh/(GPS*0.28)) * Vehicle_Flag
d_ahead = Dist_Veh * Vehicle_Flag
V[["alc"]]  = asc_alc + time_alc * time_to_impact + dist_alc * d_ahead + speed_alc * log(GPS) + nodv_alc * No_Of_Veh + pos_alc * X_pos + male_alc * Gender + oldAge_alc * Age
V[["blc"]]  = asc_blc + time_blc * time_to_impact + dist_blc * d_ahead + speed_blc * log(GPS) + nodv_blc * No_Of_Veh + pos_blc * X_pos + male_blc * Gender + oldAge_blc * Age
V[["acc"]]  = asc_acc + time_acc * time_to_impact + dist_acc * d_ahead + speed_acc * log(GPS) + nodv_acc * No_Of_Veh + pos_acc * X_pos + male_acc * Gender + oldAge_acc * Age
V[["brk"]]  = asc_brk + time_brk * time_to_impact + dist_brk * d_ahead + speed_brk * log(GPS) + nodv_brk * No_Of_Veh + pos_brk * X_pos + male_brk * Gender + oldAge_brk * Age
V[["nor"]]  = 0
mnl_settings = list(
alternatives = c(nor=0, acc=1, brk=2, alc=3, blc=4),
avail        = list(nor=norm_avail, acc=accr_avail, brk=brek_avail,alc=alc_avail, blc=blc_avail),
choiceVar    = Target,
V            = V)
P[["model"]] = apollo_mnl(mnl_settings, functionality)
P = apollo_panelProd(P, apollo_inputs, functionality)
P = apollo_prepareProb(P, apollo_inputs, functionality)
return(P)
}
Base.0 = apollo_estimate(apollo_beta,
apollo_fixed,
apollo_probabilities,
apollo_inputs)
apollo_modelOutput(Base.0)
apollo_saveOutput(Base.0)
Base.0$LL0
Base.0$LLout
hist(Base.0$avgCP)
head(Base.0$avgCP,13)
setwd("C:/Users/sprab/OneDrive/Documents/Study/University/AP/Presentation 2/Lane Change Elaborative")
library(apollo)
apollo_initialise()
database <- read.csv("All_Data.csv")
apollo_control=list(modelName  ="BaseModel",
modelDescr ="LCE",
indivID    ="Driver_tag",
workInLogs = TRUE,
outputDirectory = "output"
#,panelData  = FALSE
)
apollo_beta=c(asc_acc     = 0,
asc_brk     = 0,
speed_acc   = 0,
speed_brk   = 0,
nodv_acc    = 0,
nodv_brk    = 0,
dist_acc    = 0,
dist_brk    = 0,
time_acc    = 0,
time_brk    = 0,
asc_alc     = 0,
asc_blc     = 0,
speed_alc   = 0,
speed_blc   = 0,
nodv_alc    = 0,
nodv_blc    = 0,
dist_alc    = 0,
dist_blc    = 0,
time_alc    = 0,
time_blc    = 0,
pos_acc	= 0,
pos_brk = 0,
pos_alc  = 0,
pos_blc = 0
)
#all coefficients are estimated, none is fixed
apollo_fixed = c()
#check if you have defined everything necessary
apollo_inputs = apollo_validateInputs()
apollo_probabilities=function(apollo_beta, apollo_inputs, functionality="estimate"){
apollo_attach(apollo_beta, apollo_inputs)
on.exit(apollo_detach(apollo_beta, apollo_inputs))
P = list() ### Create list of probabilities P
V = list() ### List of utilities
time_to_impact = (Dist_Veh/(GPS*0.28)) * Vehicle_Flag
d_ahead = Dist_Veh * Vehicle_Flag
V[["alc"]]  = asc_alc + time_alc * time_to_impact + dist_alc * d_ahead + speed_alc * log(GPS) + nodv_alc * No_Of_Veh + pos_alc * X_pos
V[["blc"]]  = asc_blc + time_blc * time_to_impact + dist_blc * d_ahead + speed_blc * log(GPS) + nodv_blc * No_Of_Veh + pos_blc * X_pos
V[["acc"]]  = asc_acc + time_acc * time_to_impact + dist_acc * d_ahead + speed_acc * log(GPS) + nodv_acc * No_Of_Veh + pos_acc * X_pos
V[["brk"]]  = asc_brk + time_brk * time_to_impact + dist_brk * d_ahead + speed_brk * log(GPS) + nodv_brk * No_Of_Veh + pos_brk * X_pos
V[["nor"]]  = 0
mnl_settings = list(
alternatives = c(nor=0, acc=1, brk=2, alc=3, blc=4),
avail        = list(nor=norm_avail, acc=accr_avail, brk=brek_avail,alc=alc_avail, blc=blc_avail),
choiceVar    = Target,
V            = V)
P[["model"]] = apollo_mnl(mnl_settings, functionality)
P = apollo_panelProd(P, apollo_inputs, functionality)
P = apollo_prepareProb(P, apollo_inputs, functionality)
return(P)
}
Base.1 = apollo_estimate(apollo_beta,
apollo_fixed,
apollo_probabilities,
apollo_inputs)
apollo_modelOutput(Base.1)
apollo_saveOutput(Base.1)
Base.1$LL0
Base.1$LLout
hist(Base.1$avgCP)
head(Base.1$avgCP,13)
apollo_basTest(Base.0,Base.1)
forecast <- apollo_prediction(Base.1, apollo_probabilities, apollo_inputs, prediction_settings = list(runs=30))
hist(forecast$at_estimates$chosen)
write.csv(forecast,'C:/Users/sprab/OneDrive/Documents/Study/University/AP/Presentation 2/Quartile/forecast.csv',row.names = FALSE)
write.csv(forecast,'C:/Users/sprab/OneDrive/Documents/Study/University/AP/Presentation 2/Lane Change Elaborative/forecast.csv',row.names = FALSE)
setwd("C:/Users/sprab/OneDrive/Documents/Study/University/AP/Presentation 2/Multinomial")
library(apollo)
apollo_initialise()
database <- read.csv("All_Data.csv")
apollo_control=list(modelName  ="BaseModel",
modelDescr ="LCE",
indivID    ="Driver_tag",
workInLogs = TRUE,
outputDirectory = "output"
#,panelData  = FALSE
)
apollo_beta=c(asc_acc     = 0,
asc_brk     = 0,
speed_acc   = 0,
speed_brk   = 0,
nodv_acc    = 0,
nodv_brk    = 0,
dist_acc    = 0,
dist_brk    = 0,
time_acc    = 0,
time_brk    = 0,
asc_alc     = 0,
asc_blc     = 0,
speed_alc   = 0,
speed_blc   = 0,
nodv_alc    = 0,
nodv_blc    = 0,
dist_alc    = 0,
dist_blc    = 0,
time_alc    = 0,
time_blc    = 0,
pos_acc	= 0,
pos_brk = 0,
pos_alc  = 0,
pos_blc = 0
)
#all coefficients are estimated, none is fixed
apollo_fixed = c()
#check if you have defined everything necessary
apollo_inputs = apollo_validateInputs()
apollo_probabilities=function(apollo_beta, apollo_inputs, functionality="estimate"){
apollo_attach(apollo_beta, apollo_inputs)
on.exit(apollo_detach(apollo_beta, apollo_inputs))
P = list() ### Create list of probabilities P
V = list() ### List of utilities
time_to_impact = (Dist_Veh/(GPS*0.28)) * Vehicle_Flag
d_ahead = Dist_Veh * Vehicle_Flag
V[["alc"]]  = asc_alc + time_alc * time_to_impact + dist_alc * d_ahead + speed_alc * log(GPS) + nodv_alc * No_Of_Veh + pos_alc * X_pos
V[["blc"]]  = asc_blc + time_blc * time_to_impact + dist_blc * d_ahead + speed_blc * log(GPS) + nodv_blc * No_Of_Veh + pos_blc * X_pos
V[["acc"]]  = asc_acc + time_acc * time_to_impact + dist_acc * d_ahead + speed_acc * log(GPS) + nodv_acc * No_Of_Veh + pos_acc * X_pos
V[["brk"]]  = asc_brk + time_brk * time_to_impact + dist_brk * d_ahead + speed_brk * log(GPS) + nodv_brk * No_Of_Veh + pos_brk * X_pos
V[["nor"]]  = 0
mnl_settings = list(
alternatives = c(nor=0, acc=1, brk=2, alc=3, blc=4),
avail        = list(nor=norm_avail, acc=accr_avail, brk=brek_avail,alc=alc_avail, blc=blc_avail),
choiceVar    = Target,
V            = V)
P[["model"]] = apollo_mnl(mnl_settings, functionality)
P = apollo_panelProd(P, apollo_inputs, functionality)
P = apollo_prepareProb(P, apollo_inputs, functionality)
return(P)
}
Base.1 = apollo_estimate(apollo_beta,
apollo_fixed,
apollo_probabilities,
apollo_inputs)
apollo_modelOutput(Base.1)
apollo_saveOutput(Base.1)
Base.1$LL0
Base.1$LLout
hist(Base.1$avgCP)
head(Base.1$avgCP,13)
apollo_basTest(Base.0,Base.1)
Base.0$LLout
setwd("C:/Users/sprab/OneDrive/Documents/Study/University/AP/Presentation 2/LCC_ML")
library(apollo)
apollo_initialise()
database <- read.csv("All_Data.csv",header = TRUE)
apollo_control=list(modelName  ="BaseModel",
modelDescr ="MNL LLC",
indivID    ="Driver_tag",
workInLogs = TRUE,
outputDirectory = "output"
#,panelData  = FALSE
)
apollo_beta=c(asc_acc     = 0,
asc_brk     = 0,
speed_acc   = 0,
speed_brk   = 0,
nodv_acc    = 0,
nodv_brk    = 0,
dist_acc    = 0,
dist_brk    = 0,
time_acc    = 0,
time_brk    = 0,
asc_lc     = 0,
male_lc    = 0,
male_acc    = 0,
male_brk    = 0,
oldAge_lc  = 0,
oldAge_acc  = 0,
oldAge_brk  = 0,
speed_lc   = 0,
nodv_lc    = 0,
dist_lc    = 0,
time_lc    = 0,
pos_acc	= 0,
pos_brk = 0,
pos_lc  = 0
)
#all coefficients are estimated, none is fixed
apollo_fixed = c()
#check if you have defined everything necessary
apollo_inputs = apollo_validateInputs()
apollo_probabilities=function(apollo_beta, apollo_inputs, functionality="estimate"){
apollo_attach(apollo_beta, apollo_inputs)
on.exit(apollo_detach(apollo_beta, apollo_inputs))
P = list() ### Create list of probabilities P
V = list() ### List of utilities
time_to_impact = (Dist_Veh/(GPS*0.28)) * Vehicle_Flag
d_ahead = Dist_Veh * Vehicle_Flag
V[["lc"]]  = asc_lc + time_lc * time_to_impact + dist_lc * d_ahead + speed_lc * log(GPS) + nodv_lc * No_Of_Veh + pos_lc * X_pos + male_lc * Gender + oldAge_lc * Age
V[["acc"]]  = asc_acc + time_acc * time_to_impact + dist_acc * d_ahead + speed_acc * log(GPS) + nodv_acc * No_Of_Veh + pos_acc * X_pos + male_acc * Gender + oldAge_acc * Age
V[["brk"]]  = asc_brk + time_brk * time_to_impact + dist_brk * d_ahead + speed_brk * log(GPS) + nodv_brk * No_Of_Veh + pos_brk * X_pos + male_brk * Gender + oldAge_brk * Age
V[["nor"]]  = 0
mnl_settings = list(
alternatives = c(nor=0, acc=1, brk=2, lc=3),
avail        = list(nor=norm_avail, acc=accr_avail, brk=brek_avail,lc=lc_avail),
choiceVar    = Target,
V            = V)
P[["model"]] = apollo_mnl(mnl_settings, functionality)
P = apollo_panelProd(P, apollo_inputs, functionality)
P = apollo_prepareProb(P, apollo_inputs, functionality)
return(P)
}
Base.0 = apollo_estimate(apollo_beta,
apollo_fixed,
apollo_probabilities,
apollo_inputs)
apollo_modelOutput(Base.0)
apollo_saveOutput(Base.0)
Base.0$LL0
Base.0$LLout
setwd("C:/Users/sprab/OneDrive/Documents/Study/University/AP/Presentation 2/Lane Change Combined + Multinomial")
library(apollo)
apollo_initialise()
database <- read.csv("All_Data.csv",header = TRUE)
apollo_control=list(modelName  ="MNL_LLC_Model",
modelDescr ="MNL LLC",
indivID    ="Driver_tag",
workInLogs = TRUE,
outputDirectory = "output"
#,panelData  = FALSE
)
apollo_beta=c(asc_acc     = 0,
asc_brk     = 0,
speed_acc   = 0,
speed_brk   = 0,
nodv_acc    = 0,
nodv_brk    = 0,
dist_acc    = 0,
dist_brk    = 0,
time_acc    = 0,
time_brk    = 0,
asc_lc     = 0,
male_lc    = 0,
male_acc    = 0,
male_brk    = 0,
oldAge_lc  = 0,
oldAge_acc  = 0,
oldAge_brk  = 0,
speed_lc   = 0,
nodv_lc    = 0,
dist_lc    = 0,
time_lc    = 0,
pos_acc	= 0,
pos_brk = 0,
pos_lc  = 0
)
#all coefficients are estimated, none is fixed
apollo_fixed = c()
#check if you have defined everything necessary
apollo_inputs = apollo_validateInputs()
apollo_probabilities=function(apollo_beta, apollo_inputs, functionality="estimate"){
apollo_attach(apollo_beta, apollo_inputs)
on.exit(apollo_detach(apollo_beta, apollo_inputs))
P = list() ### Create list of probabilities P
V = list() ### List of utilities
time_to_impact = (Dist_Veh/(GPS*0.28)) * Vehicle_Flag
d_ahead = Dist_Veh * Vehicle_Flag
V[["lc"]]  = asc_lc + time_lc * time_to_impact + dist_lc * d_ahead + speed_lc * log(GPS) + nodv_lc * No_Of_Veh + pos_lc * X_pos + male_lc * Gender + oldAge_lc * Age
V[["acc"]]  = asc_acc + time_acc * time_to_impact + dist_acc * d_ahead + speed_acc * log(GPS) + nodv_acc * No_Of_Veh + pos_acc * X_pos + male_acc * Gender + oldAge_acc * Age
V[["brk"]]  = asc_brk + time_brk * time_to_impact + dist_brk * d_ahead + speed_brk * log(GPS) + nodv_brk * No_Of_Veh + pos_brk * X_pos + male_brk * Gender + oldAge_brk * Age
V[["nor"]]  = 0
mnl_settings = list(
alternatives = c(nor=0, acc=1, brk=2, lc=3),
avail        = list(nor=norm_avail, acc=accr_avail, brk=brek_avail,lc=lc_avail),
choiceVar    = Target,
V            = V)
P[["model"]] = apollo_mnl(mnl_settings, functionality)
P = apollo_panelProd(P, apollo_inputs, functionality)
P = apollo_prepareProb(P, apollo_inputs, functionality)
return(P)
}
Base.0 = apollo_estimate(apollo_beta,
apollo_fixed,
apollo_probabilities,
apollo_inputs)
apollo_modelOutput(Base.0)
apollo_saveOutput(Base.0)
Base.0$LL0
Base.0$LLout
hist(Base.0$avgCP)
head(Base.0$avgCP,13)
forecast <- apollo_prediction(Base.0, apollo_probabilities, apollo_inputs, prediction_settings = list(runs=30))
par(mar=c(1,1,1,1))
hist(forecast$at_estimates$chosen)
write.csv(forecast,'C:/Users/sprab/OneDrive/Documents/Study/University/AP/Presentation 2/Lane Change Combined + Multinomial/forecast.csv',row.names = FALSE)
